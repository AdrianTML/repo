import java.util.Scanner;

public class mainClass {

	static Scanner sc = new Scanner(System.in);
	static float[] vect;
	static int n = 10000;

	static float[] citireVector(Scanner sc) {
		float[] vect = new float[1000];

		for (int i = 0; i < n; i++)
			vect[i] = sc.nextFloat();

		return vect;

	}

	public static void main(String[] args) throws Exception {

		// int n;

		float[] s, r, x;

		System.out.println("dim matricelor (n) = ");
		n = sc.nextInt();
		float a[];
		a = citireVector(sc);

		System.out.println("Matricile:");
		System.out.print("a: ");
		for (int i = 1; i <= n; i++)
			System.out.print(a[i] + " \n");

		float b[];
		b = citireVector(sc);
		System.out.print("b: ");
		for (int i = 1; i <= n - 1; i++)
			System.out.print(b[i] + " \n");

		float c[];
		c = citireVector(sc);
		System.out.print("c: ");
		for (int i = 1; i <= n - 1; i++)
			System.out.print(c[i] + " \n");

		float d[];
		d = citireVector(sc);
		System.out.print("d: ");
		for (int i = 1; i <= n; i++)
			System.out.print(d[i] + " \n");


		r = new float[n];
		x = new float[n + 1];
		s = new float[n];

		if (a[1] != 0) {
			r[1] = -c[1] / a[1];
			s[1] = d[1] / a[1];
		}

		for (int i = 1; i <= n - 2; i++) {
			r[i + 1] = -c[i + 1] / (b[i] * r[i] + a[i + 1]);
			s[i + 1] = (d[i + 1] - b[i] * s[i]) / (b[i] * r[i] + a[i + 1]);
		}

		x[n] = (d[n] - b[n - 1] * s[n - 1]) / (b[n - 1] * r[n - 1] + a[n]);

		for (int i = n - 1; i >= 1; i--)
			x[i] = r[i] * x[i + 1] + s[i];
		System.out.println("\nSolutile:");
		for (int i = 1; i <= n; i++)
			System.out.println("x[" + i + "]: " + (float) Math.round(x[i]));
	}

}
